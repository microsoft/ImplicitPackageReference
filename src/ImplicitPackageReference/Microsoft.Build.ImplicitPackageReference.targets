<?xml version="1.0" encoding="utf-8" ?>
<Project>
  <UsingTask AssemblyFile="..\tools\Microsoft.Build.ImplicitPackageReference.dll"
             TaskName="AddImplicitPackageReferences"/>

  <ItemDefinitionGroup>
    <ImplicitPackageReference>
      <TargetFramework>$(TargetFramework)</TargetFramework>
    </ImplicitPackageReference>
  </ItemDefinitionGroup>

  <Target Name="ReturnImplicitPackageReferences" Returns="@(ImplicitPackageReference)" />

  <Target Name="AddImplicitPackageReferences" Condition="$(TargetFramework)=='' OR $(TargetFrameworks)==''" BeforeTargets="DispatchToInnerBuilds;BeforeBuild">
    <!-- In single-targetted builds, _TargetFramework is defined -->
    <MSBuild Projects="$(MSBuildProjectFullPath)" Targets="ReturnImplicitPackageReferences" Properties="TargetFramework=%(_TargetFramework.Identity)" Condition="@(_TargetFramework)!=''">
      <Output TaskParameter="TargetOutputs" ItemName="ImplicitPackageReference" />
    </MSBuild>
    <!-- In single-targetted builds, _TargetFrameworks is defined -->
    <MSBuild Projects="$(MSBuildProjectFullPath)" Targets="ReturnImplicitPackageReferences" Properties="TargetFramework=%(_TargetFrameworks.Identity)" Condition="@(_TargetFrameworks)!='' AND @(_TargetFramework)==''">
      <Output TaskParameter="TargetOutputs" ItemName="ImplicitPackageReference" />
    </MSBuild>

    <AddImplicitPackageReferences AssetsFilePath="$(ProjectAssetsFile)" ImplicitPackageReferences="@(ImplicitPackageReference)" Condition="@(ImplicitPackageReference)!=''" />
  </Target>
</Project>

